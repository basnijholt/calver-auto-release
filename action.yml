name: "CalVer Auto Release"
description: "Automatically create GitHub releases using Calendar Versioning (CalVer)"
inputs:
  github_token:
    description: "GitHub token for creating releases"
    required: true
  skip_patterns:
    description: "Comma-separated list of patterns to skip releases"
    required: false
    default: "[skip release],[pre-commit.ci],⬆️ Update"
  footer:
    description: "Custom footer text for release notes"
    required: false
    default: ""
  dry_run:
    description: 'Run in dry-run mode (no actual releases created)'
    required: false
    default: 'false'
  release_notes_type:
    description: "Source of release notes: 'github' for GitHub's auto-generated notes or 'tag_message' to use the tag message"
    required: false
    default: 'tag_message'

outputs:
  version:
    description: 'The version number of the created release (empty if no release was created)'
    value: ${{ steps.generate_version.outputs.version }}

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"

    - name: Install uv
      uses: astral-sh/setup-uv@v5

    - name: Configure Git
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@users.noreply.github.com"
        git config --global credential.helper store
        echo "https://$GITHUB_TOKEN:@github.com" > ~/.git-credentials

    - name: Install dependencies
      shell: bash
      run: |
        if [ -f "pyproject.toml" ] && grep -q "name = \"calver-auto-release\"" pyproject.toml; then
          uv tool install .
        else
          # In production, install from PyPI
          uv tool install calver-auto-release
        fi

    - name: Generate new version
      shell: bash
      id: generate_version
      env:
        SKIP_PATTERNS: ${{ inputs.skip_patterns }}
        FOOTER: ${{ inputs.footer }}
        CALVER_DRY_RUN: ${{ inputs.dry_run }}
      run: calver-auto-release

    - name: Get Tag Message
      if: steps.generate_version.outputs.version != '' && inputs.dry_run != 'true' && inputs.release_notes_type == 'tag_message'
      shell: bash
      id: tag_message
      run: |
        echo "content<<EOF" >> $GITHUB_OUTPUT
        git tag -l --format='%(contents:body)' ${{ steps.generate_version.outputs.version }} >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create GitHub Release
      if: steps.generate_version.outputs.version != '' && inputs.dry_run != 'true'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.generate_version.outputs.version }}
        generate_release_notes: ${{ inputs.release_notes_type == 'github' }}
        body: ${{ inputs.release_notes_type == 'tag_message' && steps.tag_message.outputs.content || '' }}
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
